name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    continue-on-error: true
    
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3
        continue-on-error: true
        with:
          fail-on-severity: critical
          deny-licenses: ''
          allow-licenses: 'MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC'
          fail-on-scopes: 'runtime, development'

  backend-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install root dependencies
      run: npm install

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm install

    - name: Run backend linting
      working-directory: ./backend
      run: npm run lint

    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        PORT: 5001

  frontend-test:
    runs-on: ubuntu-latest
    needs: backend-test

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install root dependencies
      run: npm install

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 0

    - name: Run frontend linting
      working-directory: ./frontend
      run: npm run lint

    - name: Run Cypress tests
      run: npm run test:cypress
      env:
        NODE_ENV: test
        PORT: 5001
        CI: true
      
    - name: Run Playwright tests
      run: npm run test:playwright

    - name: Upload Cypress test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results
        path: cypress/videos/

    - name: Upload Playwright test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-results
        path: playwright-report/

  deploy:
    needs: [backend-test, frontend-test]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Add your deployment steps here
    # Example:
    # - name: Deploy to production
    #   run: |
    #     # Add your deployment commands 